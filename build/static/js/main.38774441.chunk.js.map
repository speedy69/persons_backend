{"version":3,"sources":["axios.js","Persons.js","Filter.js","PersonForm.js","Notification.js","App.js","index.js"],"names":["address","getData","axios","get","then","res","data","Persons","handler","filter","a","name","toLowerCase","includes","map","number","id","onClick","Filter","value","onChange","PersonForm","handleChangeName","handleChangeNumber","handleSubmit","newName","newNumber","onSubmit","type","Notification","message","className","App","useState","persons","setPersons","seula","setSeula","setNewName","setNewNumber","setMessage","messageType","setMessageType","useEffect","freeze","setTimeout","e","target","preventDefault","trim","window","alert","alradyInList","person","hnklo","length","confirm","put","changeData","status","catch","post","concat","Number","temp","f","delete","req","delData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38774441.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst address = 'https://sleepy-citadel-32763.herokuapp.com/api/persons'\r\n\r\nconst getData = () => axios.get(address).then(res => res.data)\r\n\r\nconst postData = data => axios.post(address, data).then(res => res)\r\n\r\nconst delData = id => axios.delete(`${address}${id}`).then((res,req)=> res)\r\n\r\nconst changeData = data => axios.put(address, data).then(res => res)\r\n\r\nexport { getData, postData, delData, changeData }","const Persons = ({handler}) => {\r\n    return(\r\n      <table>\r\n        <tbody>\r\n          {handler[0].filter(a => a.name.toLowerCase()\r\n            .includes(handler[1].toLowerCase()))\r\n            .map(a => <tr key={a.id}>\r\n                <td>{a.name}</td>\r\n                <td>{a.number}</td>\r\n                <td><button id={a.id} name={a.name} onClick={handler[2]} >delete</button></td>\r\n                </tr>)}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\nexport default Persons","const Filter = ({handler}) => {\r\n    return(\r\n      <div>\r\n        filter shown with <input value={handler[0]} onChange={handler[1]} />\r\n      </div>\r\n      \r\n    )\r\n  }\r\nexport default Filter","const PersonForm = ({handler}) => {\r\n    const [handleChangeName,handleChangeNumber, handleSubmit, newName, newNumber] = handler\r\n    return(\r\n      <form onSubmit={handleSubmit}>\r\n          <div>\r\n            name: <input onChange={handleChangeName} value={newName}/><br/>\r\n            number: <input onChange={handleChangeNumber} value={newNumber} />\r\n          </div>\r\n          <div>\r\n            <button type='submit'>add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n  }\r\nexport default PersonForm","const Notification = ({ message, type }) => {\r\n    if(message === null){\r\n      return null\r\n    }\r\n    return(\r\n      <div className={type} >\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\nexport default Notification","import { useEffect, useState } from \"react\";\nimport { changeData, delData, getData, postData } from './axios'\nimport Persons from './Persons'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Notification from './Notification'\n\nfunction App() {\n  const [persons, setPersons] = useState([])    \n  const [seula, setSeula] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState('normal')\n\n  useEffect(() => {\n    getData().then(res => setPersons(res))\n  }, [])\n\n  const handleChangeFilter = (e) => setSeula(e.target.value)\n  const handleChangeName = (e) => setNewName(e.target.value)\n  const handleChangeNumber = (e) => setNewNumber(e.target.value)\n  const freeze = () => {\n    setTimeout(() =>{\n      setMessage(null)\n    }, 4000)\n  }\n\n /*--------- Lisatään listaan ------------*/\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(newName.trim() !== ''){\n      if(newNumber.trim() !== ''){\n        let alradyInList = false\n        let person = persons.filter(hnklo => hnklo.name.toLowerCase() === newName.toLowerCase())\n\n        if(person.length === 1){\n          alradyInList = true\n          person = person[0]\n        }\n        \n        if(!alradyInList){\n          postData({ name: newName, number: newNumber}).then(res => {\n            if(res.status === 201){\n              setPersons(persons.concat(res.data))\n              setMessageType('normal')\n              setMessage(`Added ${newName}`)\n              freeze()\n            }\n          })\n        }else{\n          if(window.confirm(`${newName} is already added to phonebook,\\nreplace the old number with a new one?`)){\n            person.number = newNumber.trim()\n\n            changeData(person).then(res => {\n              if(res.status === 204){\n                setMessageType('normal')\n                setMessage(`Changed ${newName}´s number`)\n                freeze()\n              }\n            }).catch(e => {\n              setMessageType('error')\n              setMessage(`Information of ${newName} has already been removed from server`)\n              getData().then(res => setPersons(res))\n              freeze()\n            })\n          }\n        }\n      }else{\n        window.alert('You should give a number too')\n        return\n      } \n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n/*------------ Poistetaan listasta-----------------------*/\n  const handleDelete = e => {\n    const name = e.target.name\n    const id = Number(e.target.id)\n    if(window.confirm(`Delete ${name} ?`)){\n      const temp = persons.filter(f => f.id !== id)\n      delData(id).then((res) => {\n        if(res.status === 204){        \n          setPersons(temp)\n          setMessage(`Deleted ${name}`)\n          freeze()\n        }\n      }).catch(e => {\n        setMessageType('error')\n        setMessage(`${name} is alrady deleted from phonebook!`)\n        setPersons(temp)\n        freeze()\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter handler={[seula, handleChangeFilter]} />\n      <h2>add a new</h2>\n      <PersonForm handler={[handleChangeName, handleChangeNumber, handleSubmit, newName, newNumber]} />\n      <h2>Numbers</h2>\n      <Persons handler={[persons, seula, handleDelete]} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}