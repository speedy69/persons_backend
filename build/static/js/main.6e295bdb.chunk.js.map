{"version":3,"sources":["axios.js","Persons.js","Filter.js","PersonForm.js","Notification.js","App.js","index.js"],"names":["uri","getData","axios","get","then","res","data","Persons","handler","filter","a","name","toLowerCase","includes","map","number","id","onClick","Filter","value","onChange","PersonForm","handleChangeName","handleChangeNumber","handleSubmit","newName","newNumber","onSubmit","type","Notification","message","className","App","useState","persons","setPersons","seula","setSeula","setNewName","setNewNumber","setMessage","messageType","setMessageType","useEffect","freeze","setTimeout","e","target","preventDefault","trim","window","alert","alradyInList","person","hnklo","length","confirm","put","changeData","status","catch","post","concat","error","response","temp","f","delete","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e295bdb.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n//const uri = 'https://sleepy-citadel-32763.herokuapp.com/api/persons/'\r\nconst uri = 'http://localhost:3001/api/persons/'\r\n\r\nconst getData = () => axios.get(uri).then(res => {\r\n    return res.data\r\n})\r\n\r\nconst postData = data => axios.post(uri, data).then(res => res)\r\n\r\nconst delData = id => axios.delete(`${uri}${id}`).then(res => res)\r\n\r\nconst changeData = data => axios.put(uri, data).then(res => res)\r\n\r\nexport { getData, postData, delData, changeData }","const Persons = ({handler}) => {\r\n    return(\r\n      <table>\r\n        <tbody>\r\n          {handler[0].filter(a => a.name.toLowerCase()\r\n            .includes(handler[1].toLowerCase()))\r\n            .map(a => <tr key={a.id}>\r\n                <td>{a.name}</td>\r\n                <td>{a.number}</td>\r\n                <td><button id={a.id} name={a.name} onClick={handler[2]} >delete</button></td>\r\n                </tr>)}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\nexport default Persons","const Filter = ({handler}) => {\r\n    return(\r\n      <div>\r\n        filter shown with <input value={handler[0]} onChange={handler[1]} />\r\n      </div>\r\n      \r\n    )\r\n  }\r\nexport default Filter","const PersonForm = ({handler}) => {\r\n    const [handleChangeName,handleChangeNumber, handleSubmit, newName, newNumber] = handler\r\n    return(\r\n      <form onSubmit={handleSubmit}>\r\n          <div>\r\n            name: <input onChange={handleChangeName} value={newName}/><br/>\r\n            number: <input onChange={handleChangeNumber} value={newNumber} />\r\n          </div>\r\n          <div>\r\n            <button type='submit'>add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n  }\r\nexport default PersonForm","const Notification = ({ message, type }) => {\r\n    if(message === null){\r\n      return null\r\n    }\r\n    return(\r\n      <div className={type} >\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\nexport default Notification","import { useEffect, useState } from \"react\";\r\nimport { changeData, delData, getData, postData } from './axios';\r\nimport Persons from './Persons';\r\nimport Filter from './Filter';\r\nimport PersonForm from './PersonForm';\r\nimport Notification from './Notification';\r\n\r\nfunction App() {\r\n  const [persons, setPersons] = useState([])    \r\n  const [seula, setSeula] = useState('')\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [messageType, setMessageType] = useState('')\r\n\r\n  useEffect(() => {\r\n    getData().then(res => setPersons(res))\r\n  }, [])\r\n\r\n  const handleChangeFilter = (e) => setSeula(e.target.value)\r\n  const handleChangeName = (e) => setNewName(e.target.value)\r\n  const handleChangeNumber = (e) => setNewNumber(e.target.value)\r\n  const freeze = () => {\r\n    setTimeout(() =>{\r\n      setMessage(null)\r\n    }, 4000)\r\n  }\r\n\r\n /*--------- Lisatään listaan ------------*/\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(newName.trim() !== ''){\r\n      if(newNumber.trim() !== ''){\r\n        let alradyInList = false\r\n        let person = persons.filter(hnklo => hnklo.name.toLowerCase() === newName.toLowerCase())\r\n\r\n        if(person.length === 1){\r\n          alradyInList = true\r\n          person = person[0]\r\n        }\r\n        \r\n        if(!alradyInList){\r\n          postData({ name: newName, number: newNumber}).then(res => {\r\n            if(res.status === 201){\r\n              setPersons(persons.concat(res.data))\r\n              setMessageType('normal')\r\n              setMessage(`Added ${newName}`)\r\n              freeze()\r\n            }\r\n          }).catch(error => {\r\n            setMessage(error.response.data)\r\n            setMessageType('error')\r\n            freeze()\r\n          })\r\n        }else{\r\n          if(window.confirm(`${newName} is already added to phonebook,\\nreplace the old number with a new one?`)){\r\n            person.number = newNumber.trim()\r\n\r\n            changeData(person).then(res => {\r\n              if(res.status === 204){\r\n                setMessageType('normal')\r\n                setMessage(`Changed ${newName}´s number`)\r\n                freeze()\r\n              }\r\n            }).catch(e => {\r\n              setMessageType('error')\r\n              setMessage(`Information of ${newName} has already been removed from server`)\r\n              getData().then(res => setPersons(res))\r\n              freeze()\r\n            })\r\n          }\r\n        }\r\n      }else{\r\n        window.alert('You should give a number too')\r\n        return\r\n      } \r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n/*------------ Poistetaan listasta-----------------------*/\r\n  const handleDelete = e => {\r\n    const name = e.target.name\r\n\r\n    if(window.confirm(`Delete ${name} ?`)){\r\n      const temp = persons.filter(f => f.id !== e.target.id)\r\n      delData(e.target.id).then((res) => {\r\n        if(res.status === 204){        \r\n          setPersons(temp)\r\n          setMessage(`Deleted ${name}`)\r\n          freeze()\r\n        }\r\n      }).catch(e => {\r\n        console.log(e)\r\n        setMessageType('error')\r\n        setMessage(`${name} is alrady deleted from phonebook!`)\r\n        setPersons(temp)\r\n        freeze()\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='header1'>Phonebook</h2>\r\n      <Notification message={message} type={messageType} />\r\n      <Filter handler={[seula, handleChangeFilter]} />\r\n      <h2 className='header2'>add a new</h2>\r\n      <PersonForm handler={[handleChangeName, handleChangeNumber, handleSubmit, newName, newNumber]} />\r\n      <h2 className='header2'>Numbers</h2>\r\n      <Persons handler={[persons, seula, handleDelete]} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './style/index.css'\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}